2+2
source('~/Projects/datasciencecoursera/r_programming/wk3/ProgrammingAssignment2/cachematrix.R')
mat <- makeCacheMatrix()
mat
library(xlsx)
library(xlsx)
library(xlsx)
library(xlsx)
dat <- read.xlsx("natural_gas.xlsx")
getwd()
setwd("Projects/datasciencecoursera/getting_cleaning/wk1/")
dat <- read.xlsx("natural_gas.xlsx",rowIndex = 18:23, colIndex = 7:15)
dat <- read.xlsx("natural_gas.xlsx",rowIndex = 18:23, colIndex = 7:15, sheetIndex = 1)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", desfile = "baltimore_restaurants.xml")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", destfile = "baltimore_restaurants.xml")
install.packages(XML)
install.packages("XML")
library(XML)
restaurants <- xmlTreeParse("baltimore_restaurants.xml", useInternal = T)
class(restaurants)
xmlName(restaurants)
rootNode <- xmlRoot(restaurants)
xmlName(rootNode)
names(rootNode)
rootNode[[1]]
rootNode[[1]][[1]]
zips <- xpathSApply(rootNode, "//name", xmlValue)
zips
rootNode[[1]][[1]]
zips <- xpathSApply(rootNode, "//zipcode", xmlValue)
?filter
class(zips)
zips[zips == "21231"]
length(zips[zips == "21231"])
install.packages("data.table")
library(data.table)
?fread
DT <- fread("idaho_housing.csv")
system.time(rowMeans(DT)[DT$SEX==1];rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", destfile = "idaho_housing2.csv")
DT <- fread("idaho_housing2.csv")
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
DT$pwgtp15
class(DT$pwgtp15)
DT$pwgtp15[is.na(DT$pwgtp15)]
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time({mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15)})
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]
)
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time({rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2]})
system.time(mean(DT$pwgtp15,by=DT$SEX))
mean(DT$pwgtp15,by=DT$SEX)
system.time(mean(DT$pwgtp15,by=DT$SEX))
